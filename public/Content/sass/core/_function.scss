@charset "UTF-8";

// 去單位
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

// px換算至em
@function em($px, $context: $font-size-base) {
    @if (unitless($px)) {
        $px: $px * 1px;
    }

    @if (unitless($context)) {
        $context: $context * 1px;
    }

    @return $px / $context * 1em;
}

// px to rem
@function rem($px, $base: $font-size-base) {

    // 無單位時
    @if unitless($px) {
        @return ($px / strip-unit($base)) + rem;
    }

    @else {
        // 單位 = px時
        @if unit($px) == 'px' {
            @return (strip-unit($px) / strip-unit($base)) + rem;
        }
        @if unit($px) == 'rem' {
            @return $px;
        }
    }
}

// 編碼fix
@function unicode($str){
    @return unquote("\"")+unquote(str-insert($str, "\\", 1))+unquote("\"");
}

// z-index
@function z($value) {
    @return map-get($z-index, $value);
}

// 算頁面比例
@function per($px, $datum: $max-width) {
    @return (strip-unit($px) / strip-unit($datum)) * 100%;
}

// 取代變數
// Replace `$search` with `$replace` in `$string`
//
// @author Hugo Giraudel src: https://css-tricks.com/snippets/sass/str-replace-function/
// 使用方法:
// .selector {
//   $string: 'The answer to life the universe and everything is 42.';
//   content: str-replace($string, 'e', 'xoxo');
// }
// str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E"), "#", "%23") !default;
@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// == 四捨五入幾位數
// _decimal.scss | MIT License | gist.github.com/terkel/4373420

// Round a number to specified digits.
//
// @param  {Number} $number A number to round
// @param  {Number} [$digits:0] Digits to output
// @param  {String} [$mode:round] (round|ceil|floor) How to round a number
// @return {Number} A rounded number
// @example
//     decimal-round(0.333)    => 0
//     decimal-round(0.333, 1) => 0.3
//     decimal-round(0.333, 2) => 0.33
//     decimal-round(0.666)    => 1
//     decimal-round(0.666, 1) => 0.7
//     decimal-round(0.666, 2) => 0.67
//
@function decimal-round ($number, $digits: 0, $mode: round) {
    $n: 1;
    // $number must be a number
    @if type-of($number) != number {
        @warn '#{ $number } is not a number.';
        @return $number;
    }
    // $digits must be a unitless number
    @if type-of($digits) != number {
        @warn '#{ $digits } is not a number.';
        @return $number;
    } @else if not unitless($digits) {
        @warn '#{ $digits } has a unit.';
        @return $number;
    }
    @for $i from 1 through $digits {
        $n: $n * 10;
    }
    @if $mode == round {
        @return round($number * $n) / $n;
    } @else if $mode == ceil {
        @return ceil($number * $n) / $n;
    } @else if $mode == floor {
        @return floor($number * $n) / $n;
    } @else {
        @warn '#{ $mode } is undefined keyword.';
        @return $number;
    }
}
